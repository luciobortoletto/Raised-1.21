plugins {
    id "dev.architectury.loom" version "1.2-SNAPSHOT"
    id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven { url "https://cursemaven.com" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    forge "net.minecraftforge:forge:${project.forge_version}"

    modCompileOnly "curse.maven:botania-225643:4066054"
    modCompileOnly "curse.maven:create-328085:3536025"
    modCompileOnly "curse.maven:detail-armor-bar-forge-520755:3470828"
    modCompileOnly "curse.maven:health-overlay-368223:3441946"
    modCompileOnly "curse.maven:inventorio-forge-497122:3967909"
    modCompileOnly "curse.maven:inventory-profiles-next-495267:4591810"
    modCompileOnly "curse.maven:levelhearts-273640:3542875"
    modCompileOnly "curse.maven:quark-243121:3642325"
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 8
}

loom {
    forge {
        mixinConfigs = [
                "${project.archives_base_name}.mixins.json"
        ]

        dataGen {
            mod project.mod_id
        }
    }

    mixin {
        defaultRefmapName = "${project.archives_base_name}.refmap.json"
    }
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE")
    jar.archiveAppendix.set("forge-${project.minecraft_version}")
    sourcesJar.archiveAppendix.set("forge-${project.minecraft_version}")
    remapJar.archiveAppendix.set("forge-${project.minecraft_version}")
    remapSourcesJar.archiveAppendix.set("forge-${project.minecraft_version}")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
    }
}